{"version":3,"sources":["images/header__logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","images/preloaders/preloaderCards.gif","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmationPopup.js","components/ImagePopup.js","utils/utils.js","utils/api.js","images/profile__avatar.svg","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","src","logo","alt","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","onClick","onCardDelete","link","name","onCardClick","onCardLike","length","Main","cards","isLoadingCards","isLoadingUserInfo","onEditAvatar","onEditProfile","onAddPlace","avatar","about","preloaderCards","map","Footer","PopupWithForm","isOpened","e","target","classList","contains","onClose","action","onSubmit","noValidate","title","children","EditProfilePopup","isOpen","onUpdateUser","isLoadingButtonText","useState","setName","description","setDescription","useEffect","evt","preventDefault","id","value","onChange","placeholder","required","minLength","maxLength","autoComplete","EditAvatarPopup","onUpdateAvatar","inputAvatar","useRef","current","ref","AddPlacePopup","setLink","ConfirmationPopup","ImagePopup","handleOriginalResponse","res","ok","json","Promise","reject","status","api","options","this","baseUrl","headers","fetch","then","userInfo","method","body","JSON","stringify","cardInfo","cardId","setLike","avatarLink","authorization","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmationPopupOpen","setIsConfirmationPopupOpen","selectedCard","setSelectedCard","deletedCard","setDeletedCard","avatarDefault","setCurrentUser","setCards","setIsLoadingCards","setIsLoadingUserInfo","setIsLoadingButtonText","closeAllPopups","getInitialCards","initialCards","catch","err","console","log","handleEscClose","key","document","addEventListener","removeEventListener","getUserInfo","data","Provider","changeLikeCardStatus","newCard","newCards","c","editProfile","addCard","deleteCard","filter","updateAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8b2cb8da.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header__logo.047d20f8.svg\";","import React from 'react';\r\nimport logo from './../images/header__logo.svg';\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className=\"header\">\r\n      <img src={logo} alt=\"Место в России\" className=\"header__logo\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n\r\n\r\n","import React, { useContext } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n  const cardDeleteButtonClassName = (\r\n    `button ${isOwn ? 'button_type_remove-card' : 'button_type_remove-card-hidden'}`\r\n  );\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n  const cardLikeButtonClassName = (\r\n    `button ${isLiked ? 'button_type_add-like-active' : 'button_type_add-like'}`\r\n  );\r\n\r\n  function handleImageClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card);\r\n  }\r\n\r\n  return (\r\n    <li className=\"card\">\r\n      <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\r\n      <img src={props.card.link} alt={props.card.name} className=\"card__image\" onClick={handleImageClick} />\r\n      <div className=\"card__info\">\r\n        <h2 className=\"card__name\">{props.card.name}</h2>\r\n        <div className=\"card__like\">\r\n          <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\r\n          <span className=\"card__like-count\">{props.card.likes.length ? props.card.likes.length : ''}</span>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","export default __webpack_public_path__ + \"static/media/preloaderCards.a9c8a65c.gif\";","import React, { useContext } from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport preloaderCards from './../images/preloaders/preloaderCards.gif';\r\n\r\nfunction Main({ cards, isLoadingCards, isLoadingUserInfo, onEditAvatar, onEditProfile, onAddPlace, onCardClick, onCardLike, onCardDelete }) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__about\">\r\n          <div className=\"profile__avatar\" onClick={onEditAvatar}>\r\n            <img src={currentUser.avatar} alt={currentUser.name} className=\"profile__avatar-img\" />\r\n          </div>\r\n          <div className=\"profile__description\">\r\n            <div className={`preloader preloader_type_text preloader_type_text-long ${!isLoadingUserInfo && 'preloader_hidden'}`}></div>\r\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n            <button type=\"button\" className=\"button button_type_edit-profile\" onClick={onEditProfile}></button>\r\n            <div className={`preloader preloader_type_text preloader_type_text-short ${!isLoadingUserInfo && 'preloader_hidden'}`}></div>\r\n            <p className=\"profile__job\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n        <button type=\"button\" className=\"button button_type_add-card\" onClick={onAddPlace}></button>\r\n      </section>\r\n      <section className=\"elements\">\r\n        <img src={preloaderCards} alt=\"Загрузка\" className={`preloader preloader_type_image ${!isLoadingCards && 'preloader_hidden'}`} />\r\n        <ul className=\"cards\">\r\n          {cards.map(card => (\r\n            <Card key={card._id} card={card} onCardClick={onCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete} />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__text\">&#169; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <div className={`popup ${props.isOpened && 'popup_opened'} popup_type_${props.name}`} onClick={(e) => { if (e.target.classList.contains('popup')) props.onClose() }}>\r\n      <div className=\"popup__container\">\r\n        <button type=\"button\" className=\"button button_type_close-popup\" onClick={props.onClose}></button>\r\n        <form action=\"#\" name={`${props.name}`} className=\"form\" onSubmit={props.onSubmit} noValidate>\r\n          <h2 className={`popup__heading`}>{props.title}</h2>\r\n          {props.children}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser, isLoadingButtonText }) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const [name, setName] = useState(currentUser.name);\r\n  const [description, setDescription] = useState(currentUser.about);\r\n\r\n  function handleChangeName(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleChangeDescription(evt) {\r\n    setDescription(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onUpdateUser({\r\n      name,\r\n      about: description\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"edit-profile\"\r\n      title=\"Редактировать профиль\"\r\n    >\r\n      <label className=\"form__field\">\r\n        <input type=\"text\"\r\n          name=\"name\"\r\n          id=\"profile-name-input\"\r\n          value={name}\r\n          onChange={handleChangeName}\r\n          placeholder=\"Имя\"\r\n          className=\"form__input form__input_el_profile-name\"\r\n          required\r\n          minLength=\"2\"\r\n          maxLength=\"40\"\r\n          autoComplete=\"off\" />\r\n        <span className=\"form__input-error profile-name-input-error\"></span>\r\n      </label>\r\n      <label className=\"form__field\">\r\n        <input type=\"text\"\r\n          name=\"description\"\r\n          id=\"profile-job-input\"\r\n          value={description}\r\n          onChange={handleChangeDescription}\r\n          placeholder=\"Вид деятельности\"\r\n          className=\"form__input form__input_el_profile-job\"\r\n          required\r\n          minLength=\"2\"\r\n          maxLength=\"200\"\r\n          autoComplete=\"off\" />\r\n        <span className=\"form__input-error profile-job-input-error\"></span>\r\n      </label>\r\n      <button type=\"submit\" className=\"button button_type_submit\">{isLoadingButtonText ? 'Сохранение...' : 'Сохранить'}</button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;","import React, { useRef } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar, isLoadingButtonText }) {\r\n  const inputAvatar = useRef();\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onUpdateAvatar({\r\n      avatar: inputAvatar.current.value\r\n    });\r\n    inputAvatar.current.value = '';\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"update-avatar\"\r\n      title=\"Обновить аватар\"\r\n    >\r\n      <label className=\"form__field\">\r\n        <input type=\"url\"\r\n          name=\"avatar-link\"\r\n          id=\"avatar-link-input\"\r\n          ref={inputAvatar}\r\n          className=\"form__input form__input_size_small form__input_el_avatar-link\"\r\n          placeholder=\"Ссылка на аватар\"\r\n          required\r\n          autoComplete=\"off\" />\r\n        <span className=\"form__input-error avatar-link-input-error\"></span>\r\n      </label>\r\n      <button type=\"submit\" className=\"button button_type_submit\">{isLoadingButtonText ? 'Сохранение...' : 'Сохранить'}</button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React, { useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace, isLoadingButtonText }) {\r\n  const [name, setName] = useState('');\r\n  const [link, setLink] = useState('');\r\n\r\n  function handleCardNameChange(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleCardLinkChange(evt) {\r\n    setLink(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onAddPlace({\r\n      name,\r\n      link\r\n    });\r\n    setName('');\r\n    setLink('');\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"add-card\"\r\n      title=\"Новое место\"\r\n    >\r\n      <label className=\"form__field\">\r\n        <input type=\"text\"\r\n          name=\"card-name\"\r\n          id=\"card-name-input\"\r\n          value={name}\r\n          onChange={handleCardNameChange}\r\n          className=\"form__input form__input_size_small form__input_el_card-name\"\r\n          placeholder=\"Название\"\r\n          required\r\n          minLength=\"2\"\r\n          maxLength=\"30\"\r\n          autoComplete=\"off\" />\r\n        <span className=\"form__input-error card-name-input-error\"></span>\r\n      </label>\r\n      <label className=\"form__field\">\r\n        <input type=\"url\"\r\n          name=\"card-link\"\r\n          id=\"card-link-input\"\r\n          value={link}\r\n          onChange={handleCardLinkChange}\r\n          className=\"form__input form__input_size_small form__input_el_card-link\"\r\n          placeholder=\"Ссылка на картинку\"\r\n          required\r\n          autoComplete=\"off\" />\r\n        <span className=\"form__input-error card-link-input-error\"></span>\r\n      </label>\r\n      <button type=\"submit\" className=\"button button_type_submit\">{isLoadingButtonText ? 'Сохранение...' : 'Создать'}</button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ConfirmationPopup({ card, isOpen, onClose, onCardDelete, isLoadingButtonText }) {\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onCardDelete(card._id);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"delete-card\"\r\n      title=\"Вы уверены?\"\r\n    >\r\n      <button type=\"submit\" className=\"button button_type_submit\">{isLoadingButtonText ? 'Удаление...' : 'Да'}</button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default ConfirmationPopup;\r\n","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <>\r\n      <div className={`popup popup_type_show-card ${props.card && 'popup_opened'}`} onClick={(e) => { if (e.target.classList.contains('popup')) props.onClose() }}>\r\n        <div className=\"popup__container popup__container_size_large\">\r\n          <button type=\"button\" className=\"button button_type_close-popup\" onClick={props.onClose}></button>\r\n          <figure className=\"popup__figure\">\r\n            <img src={props.card && props.card.link} alt={props.card && props.card.name} className=\"popup__image\" />\r\n            <figcaption className=\"popup__caption\">{props.card && props.card.name}</figcaption>\r\n          </figure>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","const handleOriginalResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Error: ${res.status}`);\r\n}\r\n\r\nexport default handleOriginalResponse;","import handleOriginalResponse from './utils.js';\r\n\r\nclass Api {\r\n  constructor(options) {\r\n    this.baseUrl = options.baseUrl;\r\n    this.headers = options.headers;\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      headers: this.headers\r\n    })\r\n      .then(handleOriginalResponse);\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this.baseUrl}/cards/`, {\r\n      headers: this.headers\r\n    })\r\n      .then(handleOriginalResponse);\r\n  }\r\n\r\n  editProfile(userInfo) {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: userInfo.name,\r\n        about: userInfo.about\r\n      })\r\n    })\r\n      .then(handleOriginalResponse);\r\n  }\r\n\r\n  addCard(cardInfo) {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: cardInfo.name,\r\n        link: cardInfo.link\r\n      })\r\n    })\r\n      .then(handleOriginalResponse);\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this.headers,\r\n    })\r\n      .then(handleOriginalResponse);\r\n    ;\r\n  }\r\n\r\n  changeLikeCardStatus(cardId, setLike) {\r\n    if (setLike) {\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: this.headers,\r\n      })\r\n        .then(handleOriginalResponse);\r\n    } else {\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: this.headers,\r\n      })\r\n        .then(handleOriginalResponse);\r\n    }\r\n  }\r\n\r\n  updateAvatar(avatarLink) {\r\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        avatar: avatarLink\r\n      })\r\n    })\r\n      .then(handleOriginalResponse);\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-19',\r\n  headers: {\r\n    authorization: 'c965dbbc-afa4-4385-8eef-dcc49737a825',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api;","export default __webpack_public_path__ + \"static/media/profile__avatar.64512549.svg\";","import React, { useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ConfirmationPopup from './ConfirmationPopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport api from '../utils/api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport avatarDefault from './../images/profile__avatar.svg';\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);                       // Стейт попап редактирования профиля открыт\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);                             // Стейт попап добавить карточку открыт\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);                         // Стейт попап редактирования аватара открыт\r\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = useState(false);                     // Стейт попап подтверждения удаления карточки открыт\r\n  const [selectedCard, setSelectedCard] = useState(null);                                            // Стейт выбранная карточка для передачи картинки карточки в попап\r\n  const [deletedCard, setDeletedCard] = useState(null);                                              // Стейт выбранная карточка для удаления\r\n  const [currentUser, setCurrentUser] = useState({                                                   // Стейт данные текущего пользователя\r\n    name: '',\r\n    about: '',\r\n    avatar: avatarDefault\r\n  });\r\n  const [cards, setCards] = useState([]);                                                            // Стейт массив карточек\r\n  const [isLoadingCards, setIsLoadingCards] = useState(true);                                        // Стейт прелоадер загрузки карточек\r\n  const [isLoadingUserInfo, setIsLoadingUserInfo] = useState(true);                                  // Стейт прелоадер загрузки информации пользователя\r\n  const [isLoadingButtonText, setIsLoadingButtonText] = useState(false);                              // Стейт надпись на кнопке при сохранении контента\r\n\r\n  // Обработчик клика по аватару\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  // Обработчик клика по кнопке редактирования профиля\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  // Обработчик клика по кнопке добавить карточку\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  // Обработчик клика по кнопке удалить карточку\r\n  function handleCardDelete(card) {\r\n    setIsConfirmationPopupOpen(true);\r\n    setDeletedCard(card);\r\n  }\r\n\r\n  // Функция закрытия всех попапов\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsConfirmationPopupOpen(false);\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  // Обработчик клика по картинке карточки\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  // Обработчик обновления информации пользователя\r\n  function handleUpdateUser(userInfo) {\r\n    setIsLoadingButtonText(true);\r\n    api.editProfile(userInfo)\r\n      .then(data => {\r\n        setCurrentUser({ ...data });\r\n        closeAllPopups();\r\n        setIsLoadingButtonText(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // Обработчик обновления аватара\r\n  function handleUpdateAvatar({ avatar }) {\r\n    setIsLoadingButtonText(true);\r\n    api.updateAvatar(avatar)\r\n      .then(data => {\r\n        setCurrentUser({ ...data });\r\n        closeAllPopups();\r\n        setIsLoadingButtonText(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    api.changeLikeCardStatus(card._id, !isLiked)\r\n      .then(newCard => {\r\n        const newCards = cards.map(c => c._id === card._id ? newCard : c);\r\n        setCards(newCards);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // Обработчик подтверждения удаления карточки\r\n  function handleCardDeleteSubmit(cardId) {\r\n    setIsLoadingButtonText(true);\r\n    api.deleteCard(cardId)\r\n      .then(() => {\r\n        const newCards = cards.filter(c => c._id !== cardId);\r\n        setCards(newCards);\r\n        closeAllPopups();\r\n        setIsLoadingButtonText(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // Обработчик добавления карточки\r\n  function handleAddPlaceSubmit(cardInfo) {\r\n    setIsLoadingButtonText(true);\r\n    api.addCard(cardInfo)\r\n      .then(newCard => {\r\n        setCards([newCard, ...cards]);\r\n        closeAllPopups();\r\n        setIsLoadingButtonText(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // Загрузка карточек по умолчанию\r\n  useEffect(() => {\r\n    api.getInitialCards()\r\n      .then(initialCards => {\r\n        setCards(initialCards);\r\n        setIsLoadingCards(false);\r\n      })\r\n      .catch(err => console.log(err))\r\n  }, []);\r\n\r\n  // Добавить/удалить слушателя нажатия Esc при открытии попапа\r\n  useEffect(() => {\r\n    function handleEscClose(evt) {\r\n      if (evt.key === 'Escape') {\r\n        closeAllPopups();\r\n      };\r\n    }\r\n\r\n    (isEditProfilePopupOpen || isAddPlacePopupOpen || isEditAvatarPopupOpen || isConfirmationPopupOpen || selectedCard) && document.addEventListener('keydown', handleEscClose);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscClose);\r\n    }\r\n  }, [isEditProfilePopupOpen, isAddPlacePopupOpen, isEditAvatarPopupOpen, isConfirmationPopupOpen, selectedCard]);\r\n\r\n  // Загрузка данных пользователя\r\n  useEffect(() => {\r\n    api.getUserInfo()\r\n      .then(data => {\r\n        setCurrentUser({ ...data });\r\n        setIsLoadingUserInfo(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page__container\">\r\n        <Header />\r\n        <Main\r\n          onEditAvatar={handleEditAvatarClick}\r\n          onEditProfile={handleEditProfileClick}\r\n          onAddPlace={handleAddPlaceClick}\r\n          onCardClick={handleCardClick}\r\n          onCardLike={handleCardLike}\r\n          onCardDelete={handleCardDelete}\r\n          cards={cards}\r\n          isLoadingCards={isLoadingCards}\r\n          isLoadingUserInfo={isLoadingUserInfo}\r\n        />\r\n        <Footer />\r\n        {/* <!-- Попап редактировать профиль --> */}\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n          isLoadingButtonText={isLoadingButtonText}\r\n        />\r\n        {/* <!-- Попап добавить карточку --> */}\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n          isLoadingButtonText={isLoadingButtonText}\r\n        />\r\n        {/* <!-- Попап картинка --> */}\r\n        <ImagePopup\r\n          onClose={closeAllPopups}\r\n          card={selectedCard}\r\n        />\r\n        {/* <!-- Попап удаления карточки --> */}\r\n        <ConfirmationPopup\r\n          isOpen={isConfirmationPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onCardDelete={handleCardDeleteSubmit}\r\n          card={deletedCard}\r\n          isLoadingButtonText={isLoadingButtonText}\r\n        />\r\n\r\n        {/* <!-- Попап обновить аватар --> */}\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n          isLoadingButtonText={isLoadingButtonText}\r\n        />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}